name: Update Content

on:
  # 监听原仓库的更新
  repository_dispatch:
    types: [weekly_update]
  # 定时运行，每周五上午 9:30 左右（UTC 1:30）
  schedule:
    - cron: "30 1 * * 5"
  # 允许手动触发
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check original repo updates
        id: check_updates
        run: |
          # 克隆原仓库到临时目录
          git clone --depth=1 https://github.com/ruanyf/weekly.git temp_weekly
          # 检查是否有新文件
          NEW_FILES=$(find temp_weekly/docs -name "issue-*.md" -newer $(git ls-files docs/issue-*.md | sort -r | head -n1) 2>/dev/null)
          if [ ! -z "$NEW_FILES" ]; then
            echo "new_updates=true" >> $GITHUB_OUTPUT
            # 复制新文件到我们的仓库
            cp -r temp_weekly/docs/* docs/
          fi
          rm -rf temp_weekly

      - name: Set up Python
        if: steps.check_updates.outputs.new_updates == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"

      - name: Install dependencies
        if: steps.check_updates.outputs.new_updates == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run content extraction
        if: steps.check_updates.outputs.new_updates == 'true'
        run: python scripts/extract_content.py

      - name: Commit changes
        if: steps.check_updates.outputs.new_updates == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docs/ data/
          git commit -m "Update content from weekly $(date +'%Y-%m-%d')" || echo "No changes to commit"
          git push
